//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTest.CheckLicenseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CheckLicenseService.CheckLicenseSoap")]
    public interface CheckLicenseSoap {
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 HelloWorldResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        ConsoleTest.CheckLicenseService.HelloWorldResponse HelloWorld(ConsoleTest.CheckLicenseService.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<ConsoleTest.CheckLicenseService.HelloWorldResponse> HelloWorldAsync(ConsoleTest.CheckLicenseService.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerLicence", ReplyAction="*")]
        ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponse CheckCustomerLicence(ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCustomerLicence", ReplyAction="*")]
        System.Threading.Tasks.Task<ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponse> CheckCustomerLicenceAsync(ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public ConsoleTest.CheckLicenseService.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(ConsoleTest.CheckLicenseService.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody {
        
        public HelloWorldRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public ConsoleTest.CheckLicenseService.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(ConsoleTest.CheckLicenseService.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckCustomerLicenceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckCustomerLicence", Namespace="http://tempuri.org/", Order=0)]
        public ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequestBody Body;
        
        public CheckCustomerLicenceRequest() {
        }
        
        public CheckCustomerLicenceRequest(ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckCustomerLicenceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sCustomerCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sLicenceCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sMsg;
        
        public CheckCustomerLicenceRequestBody() {
        }
        
        public CheckCustomerLicenceRequestBody(string sCustomerCode, string sLicenceCode, string sMsg) {
            this.sCustomerCode = sCustomerCode;
            this.sLicenceCode = sLicenceCode;
            this.sMsg = sMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckCustomerLicenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckCustomerLicenceResponse", Namespace="http://tempuri.org/", Order=0)]
        public ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponseBody Body;
        
        public CheckCustomerLicenceResponse() {
        }
        
        public CheckCustomerLicenceResponse(ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckCustomerLicenceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool CheckCustomerLicenceResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sMsg;
        
        public CheckCustomerLicenceResponseBody() {
        }
        
        public CheckCustomerLicenceResponseBody(bool CheckCustomerLicenceResult, string sMsg) {
            this.CheckCustomerLicenceResult = CheckCustomerLicenceResult;
            this.sMsg = sMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CheckLicenseSoapChannel : ConsoleTest.CheckLicenseService.CheckLicenseSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLicenseSoapClient : System.ServiceModel.ClientBase<ConsoleTest.CheckLicenseService.CheckLicenseSoap>, ConsoleTest.CheckLicenseService.CheckLicenseSoap {
        
        public CheckLicenseSoapClient() {
        }
        
        public CheckLicenseSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CheckLicenseSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckLicenseSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckLicenseSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleTest.CheckLicenseService.HelloWorldResponse ConsoleTest.CheckLicenseService.CheckLicenseSoap.HelloWorld(ConsoleTest.CheckLicenseService.HelloWorldRequest request) {
            return base.Channel.HelloWorld(request);
        }
        
        public string HelloWorld() {
            ConsoleTest.CheckLicenseService.HelloWorldRequest inValue = new ConsoleTest.CheckLicenseService.HelloWorldRequest();
            inValue.Body = new ConsoleTest.CheckLicenseService.HelloWorldRequestBody();
            ConsoleTest.CheckLicenseService.HelloWorldResponse retVal = ((ConsoleTest.CheckLicenseService.CheckLicenseSoap)(this)).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ConsoleTest.CheckLicenseService.HelloWorldResponse> ConsoleTest.CheckLicenseService.CheckLicenseSoap.HelloWorldAsync(ConsoleTest.CheckLicenseService.HelloWorldRequest request) {
            return base.Channel.HelloWorldAsync(request);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.CheckLicenseService.HelloWorldResponse> HelloWorldAsync() {
            ConsoleTest.CheckLicenseService.HelloWorldRequest inValue = new ConsoleTest.CheckLicenseService.HelloWorldRequest();
            inValue.Body = new ConsoleTest.CheckLicenseService.HelloWorldRequestBody();
            return ((ConsoleTest.CheckLicenseService.CheckLicenseSoap)(this)).HelloWorldAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponse ConsoleTest.CheckLicenseService.CheckLicenseSoap.CheckCustomerLicence(ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest request) {
            return base.Channel.CheckCustomerLicence(request);
        }
        
        public bool CheckCustomerLicence(string sCustomerCode, string sLicenceCode, ref string sMsg) {
            ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest inValue = new ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest();
            inValue.Body = new ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequestBody();
            inValue.Body.sCustomerCode = sCustomerCode;
            inValue.Body.sLicenceCode = sLicenceCode;
            inValue.Body.sMsg = sMsg;
            ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponse retVal = ((ConsoleTest.CheckLicenseService.CheckLicenseSoap)(this)).CheckCustomerLicence(inValue);
            sMsg = retVal.Body.sMsg;
            return retVal.Body.CheckCustomerLicenceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponse> ConsoleTest.CheckLicenseService.CheckLicenseSoap.CheckCustomerLicenceAsync(ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest request) {
            return base.Channel.CheckCustomerLicenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.CheckLicenseService.CheckCustomerLicenceResponse> CheckCustomerLicenceAsync(string sCustomerCode, string sLicenceCode, string sMsg) {
            ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest inValue = new ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequest();
            inValue.Body = new ConsoleTest.CheckLicenseService.CheckCustomerLicenceRequestBody();
            inValue.Body.sCustomerCode = sCustomerCode;
            inValue.Body.sLicenceCode = sLicenceCode;
            inValue.Body.sMsg = sMsg;
            return ((ConsoleTest.CheckLicenseService.CheckLicenseSoap)(this)).CheckCustomerLicenceAsync(inValue);
        }
    }
}
